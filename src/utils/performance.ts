/**
 * –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ sticky —ç–ª–µ–º–µ–Ω—Ç–æ–≤
 * –ü—Ä–∏–Ω—Ü–∏–ø SRP: –æ—Ç–≤–µ—á–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∑–∞ —Å–±–æ—Ä –∏ –∞–Ω–∞–ª–∏–∑ –º–µ—Ç—Ä–∏–∫ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
 */

import { debugLogger } from '@/debug/debugLogger';

export interface PerformanceMetrics {
  elementId: string;
  renderTime: number;
  scrollResponsiveness: number;
  memoryUsage: number;
  recomputations: number;
  lastUpdate: number;
}

export interface PerformanceThresholds {
  maxRenderTime: number; // –º—Å
  maxScrollDelay: number; // –º—Å
  maxMemoryUsage: number; // MB
  maxRecomputations: number; // –∑–∞ —Å–µ–∫—É–Ω–¥—É
}

class PerformanceMonitor {
  private metrics = new Map<string, PerformanceMetrics>();
  private observers = new Set<(metrics: PerformanceMetrics) => void>();
  private thresholds: PerformanceThresholds;
  private isEnabled = false;

  constructor(thresholds: Partial<PerformanceThresholds> = {}) {
    this.thresholds = {
      maxRenderTime: 16, // 60fps
      maxScrollDelay: 8, // –ø–ª–∞–≤–Ω—ã–π —Å–∫—Ä–æ–ª–ª
      maxMemoryUsage: 10, // 10MB
      maxRecomputations: 60, // –Ω–µ –±–æ–ª–µ–µ 60 –ø–µ—Ä–µ—Å—á–µ—Ç–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É
      ...thresholds
    };
  }

  /**
   * –í–∫–ª—é—á–µ–Ω–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (—Ç–æ–ª—å–∫–æ –≤ development)
   */
  enable(): void {
    if (process?.env['NODE_ENV'] === 'development') {
      this.isEnabled = true;
      debugLogger.info('performance-monitor', 'Performance monitoring enabled');
      this.startMemoryMonitoring();
    }
  }

  /**
   * –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
   */
  disable(): void {
    debugLogger.info('performance-monitor', 'Performance monitoring disabled');
    this.isEnabled = false;
    this.metrics.clear();
    this.observers.clear();
  }

  /**
   * –ò–∑–º–µ—Ä–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ —Ä–µ–Ω–¥–µ—Ä–∞ —ç–ª–µ–º–µ–Ω—Ç–∞
   */
  measureRenderTime<T>(elementId: string, fn: () => T): T {
    if (!this.isEnabled) return fn();

    const start = performance.now();
    const result = fn();
    const renderTime = performance.now() - start;

    this.updateMetric(elementId, { renderTime });

    // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –µ—Å–ª–∏ —Ä–µ–Ω–¥–µ—Ä —Å–ª–∏—à–∫–æ–º –º–µ–¥–ª–µ–Ω–Ω—ã–π
    if (renderTime > this.thresholds.maxRenderTime) {
      debugLogger.warning(elementId, `Slow render detected: ${renderTime.toFixed(2)}ms`, {
        renderTime,
        threshold: this.thresholds.maxRenderTime
      });
      console.warn(
        `üêå –ú–µ–¥–ª–µ–Ω–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä sticky —ç–ª–µ–º–µ–Ω—Ç–∞ "${elementId}": ${renderTime.toFixed(2)}–º—Å`,
        '\n–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:',
        '\n- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ React.memo –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ª–∏—à–Ω–∏—Ö —Ä–µ–Ω–¥–µ—Ä–æ–≤',
        '\n- –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –≤ useMemo/useCallback',
        '\n- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤ useEffect'
      );
    }

    return result;
  }

  /**
   * –ò–∑–º–µ—Ä–µ–Ω–∏–µ –æ—Ç–∑—ã–≤—á–∏–≤–æ—Å—Ç–∏ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
   */
  measureScrollResponsiveness(elementId: string, scrollHandler: () => void): () => void {
    if (!this.isEnabled) return scrollHandler;

    return () => {
      const start = performance.now();
      scrollHandler();
      const scrollResponsiveness = performance.now() - start;

      this.updateMetric(elementId, { scrollResponsiveness });

      if (scrollResponsiveness > this.thresholds.maxScrollDelay) {
        debugLogger.warning(elementId, `Slow scroll handling detected: ${scrollResponsiveness.toFixed(2)}ms`, {
          scrollResponsiveness,
          threshold: this.thresholds.maxScrollDelay
        });
        console.warn(
          `üêå –ú–µ–¥–ª–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∫—Ä–æ–ª–ª–∞ –¥–ª—è "${elementId}": ${scrollResponsiveness.toFixed(2)}–º—Å`,
          '\n–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:',
          '\n- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ throttle/debounce –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–∫—Ä–æ–ª–ª–∞',
          '\n- –ú–∏–Ω–∏–º–∏–∑–∏—Ä—É–π—Ç–µ DOM –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞—Ö',
          '\n- –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ requestAnimationFrame'
        );
      }
    };
  }

  /**
   * –ü–æ–¥—Å—á–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–µ—Ä–µ—Å—á–µ—Ç–æ–≤ —Å–æ—Å—Ç–æ—è–Ω–∏—è
   */
  trackRecomputation(elementId: string): void {
    if (!this.isEnabled) return;

    const metric = this.metrics.get(elementId);
    const now = Date.now();

    if (metric) {
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
      if (now - metric.lastUpdate > 1000) {
        metric.recomputations = 1;
      } else {
        metric.recomputations++;
      }

      metric.lastUpdate = now;

      if (metric.recomputations > this.thresholds.maxRecomputations) {
        console.warn(
          `üîÑ –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–µ—Ä–µ—Å—á–µ—Ç–æ–≤ –¥–ª—è "${elementId}": ${metric.recomputations}/—Å–µ–∫`,
          '\n–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:',
          '\n- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤ useMemo/useCallback',
          '\n- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ React.memo –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ª–∏—à–Ω–∏—Ö —Ä–µ–Ω–¥–µ—Ä–æ–≤',
          '\n- –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ –ª–æ–≥–∏–∫—É –≤—ã—á–∏—Å–ª–µ–Ω–∏–π sticky —Å–æ—Å—Ç–æ—è–Ω–∏—è'
        );
      }
    }
  }

  /**
   * –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–∞–º—è—Ç–∏
   */
  private startMemoryMonitoring(): void {
    const memory = (performance as unknown as { memory?: { usedJSHeapSize: number } }).memory;
    if (!memory) return;

    setInterval(() => {
      const memoryUsage = memory.usedJSHeapSize / (1024 * 1024); // –≤ MB

      if (memoryUsage > this.thresholds.maxMemoryUsage) {
        console.warn(
          `üß† –í—ã—Å–æ–∫–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏: ${memoryUsage.toFixed(2)}MB`,
          '\n–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:',
          '\n- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞ —É—Ç–µ—á–∫–∏ –ø–∞–º—è—Ç–∏ –≤ sticky —ç–ª–µ–º–µ–Ω—Ç–∞—Ö',
          '\n- –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —ç–ª–µ–º–µ–Ω—Ç—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–∫–ª—é—á–∞—é—Ç—Å—è –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏',
          '\n- –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–∏—Ä—Ç—É–∞–ª–∏–∑–∞—Ü–∏—é –¥–ª—è –±–æ–ª—å—à–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤'
        );
      }
    }, 5000); // –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
  }

  /**
   * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ —ç–ª–µ–º–µ–Ω—Ç–∞
   */
  private updateMetric(elementId: string, update: Partial<PerformanceMetrics>): void {
    const existing = this.metrics.get(elementId) || {
      elementId,
      renderTime: 0,
      scrollResponsiveness: 0,
      memoryUsage: 0,
      recomputations: 0,
      lastUpdate: Date.now()
    };

    const updated = { ...existing, ...update, lastUpdate: Date.now() };
    this.metrics.set(elementId, updated);

    // –£–≤–µ–¥–æ–º–ª—è–µ–º –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª–µ–π
    this.observers.forEach(observer => observer(updated));
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É
   */
  getMetrics(elementId: string): PerformanceMetrics | null {
    return this.metrics.get(elementId) || null;
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –º–µ—Ç—Ä–∏–∫
   */
  getAllMetrics(): PerformanceMetrics[] {
    return Array.from(this.metrics.values());
  }

  /**
   * –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –º–µ—Ç—Ä–∏–∫
   */
  subscribe(observer: (metrics: PerformanceMetrics) => void): () => void {
    this.observers.add(observer);
    return () => this.observers.delete(observer);
  }

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
   */
  generateReport(): string {
    const metrics = this.getAllMetrics();

    if (metrics.length === 0) {
      return '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç—á–µ—Ç–∞ –æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏';
    }

    const avgRenderTime = metrics.reduce((sum, m) => sum + m.renderTime, 0) / metrics.length;
    const avgScrollTime = metrics.reduce((sum, m) => sum + m.scrollResponsiveness, 0) / metrics.length;
    const totalRecomputations = metrics.reduce((sum, m) => sum + m.recomputations, 0);

    return `
üìä –û—Ç—á–µ—Ç –æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ Sticky –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
================================================
–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
- –≠–ª–µ–º–µ–Ω—Ç–æ–≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è: ${metrics.length}
- –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è —Ä–µ–Ω–¥–µ—Ä–∞: ${avgRenderTime.toFixed(2)}–º—Å
- –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–∫—Ä–æ–ª–ª–∞: ${avgScrollTime.toFixed(2)}–º—Å
- –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ—Å—á–µ—Ç–æ–≤: ${totalRecomputations}

–î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —ç–ª–µ–º–µ–Ω—Ç–∞–º:
${metrics.map(m => `
‚Ä¢ ${m.elementId}:
  - –í—Ä–µ–º—è —Ä–µ–Ω–¥–µ—Ä–∞: ${m.renderTime.toFixed(2)}–º—Å
  - –û—Ç–∑—ã–≤—á–∏–≤–æ—Å—Ç—å —Å–∫—Ä–æ–ª–ª–∞: ${m.scrollResponsiveness.toFixed(2)}–º—Å
  - –ü–µ—Ä–µ—Å—á–µ—Ç–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É: ${m.recomputations}
`).join('')}

${this.generateRecommendations(metrics)}
    `.trim();
  }

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
   */
  private generateRecommendations(metrics: PerformanceMetrics[]): string {
    const recommendations: string[] = [];

    const slowRenders = metrics.filter(m => m.renderTime > this.thresholds.maxRenderTime);
    if (slowRenders.length > 0) {
      recommendations.push('üêå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –º–µ–¥–ª–µ–Ω–Ω—ã–µ —Ä–µ–Ω–¥–µ—Ä—ã - —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –º–µ–º–æ–∏–∑–∞—Ü–∏—é –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤');
    }

    const slowScroll = metrics.filter(m => m.scrollResponsiveness > this.thresholds.maxScrollDelay);
    if (slowScroll.length > 0) {
      recommendations.push('üìú –ú–µ–¥–ª–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∫—Ä–æ–ª–ª–∞ - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ throttling');
    }

    const manyRecomputations = metrics.filter(m => m.recomputations > this.thresholds.maxRecomputations);
    if (manyRecomputations.length > 0) {
      recommendations.push('üîÑ –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–µ—Ä–µ—Å—á–µ—Ç–æ–≤ - –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏');
    }

    return recommendations.length > 0
      ? `–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:\n${recommendations.join('\n')}`
      : '‚úÖ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ –Ω–æ—Ä–º–µ!';
  }
}

// –°–∏–Ω–≥–ª—Ç–æ–Ω –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
export const performanceMonitor = new PerformanceMonitor();
