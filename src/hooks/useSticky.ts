/**
 * –û—Å–Ω–æ–≤–Ω–æ–π —Ö—É–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ sticky —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
 * - SRP: –æ—Ç–≤–µ—á–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∑–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–¥–Ω–∏–º sticky —ç–ª–µ–º–µ–Ω—Ç–æ–º
 * - Information Expert: –∑–Ω–∞–µ—Ç –æ —Å–≤–æ–µ–º lifecycle
 * - Low Coupling: –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
 */

import { useEffect, useRef, useCallback, useMemo, useState } from 'react';


// –†–µ—ç–∫—Å–ø–æ—Ä—Ç —Ç–∏–ø–æ–≤ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
export type { UseStickyOptions, UseStickyReturn } from '@/types/sticky.types';

import { generateId } from '@/utils/id';
import type { StickyConfig, UseStickyOptions, UseStickyReturn } from '@/types/sticky.types';
import { useStickyContext } from '@/context/StickyContext';
import { debugLogger } from '@/debug/debugLogger';

// –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –∏–∑ –æ–±—â–∏—Ö —Ç–∏–ø–æ–≤

/**
 * –û—Å–Ω–æ–≤–Ω–æ–π —Ö—É–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ sticky —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
 * –ü—Ä–∏–Ω—Ü–∏–ø SRP: –æ—Ç–≤–µ—á–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∑–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–¥–Ω–∏–º sticky —ç–ª–µ–º–µ–Ω—Ç–æ–º
 */
export const useSticky = (options: UseStickyOptions): UseStickyReturn => {
  const context = useStickyContext();
  const elementRef = useRef<HTMLElement>(null);
  const [isInitialized, setIsInitialized] = useState(false);

  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –µ—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω
  const stickyId = useMemo(() => {
    const id = options.id || `${generateId()}`;

    // üîß –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è ID
    debugLogger.debug(id, 'Sticky ID —Å–æ–∑–¥–∞–Ω', {
      providedId: options.id,
      generatedId: id,
      isGenerated: !options.id
    });

    return id;
  }, [options.id]);

  // === –†–ï–®–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú–´ exactOptionalPropertyTypes ===

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
   * –†–µ—à–µ–Ω–∏–µ 1: –£—Å–ª–æ–≤–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤ (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ)
   */
  const config = useMemo((): StickyConfig => {
    // –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    const baseConfig: StickyConfig = {
      id: stickyId,
      direction: options.direction || 'top',
      offset: options.offset || { top: 0 },
      priority: options.priority || 0,
      disabled: options.enabled === false,
      smooth: options.smooth ?? true
    };

    // –£—Å–ª–æ–≤–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã
    const configWithOptionals = {
      ...baseConfig,
      ...(options.boundary !== undefined && { boundary: options.boundary }),
      ...(options.zIndex !== undefined && { zIndex: options.zIndex }),
      ...(options.breakpoints !== undefined && { breakpoints: options.breakpoints })
    };

    // üîß –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    debugLogger.debug(stickyId, '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞', {
      config: configWithOptionals,
      hasOptionalBoundary: options.boundary !== undefined,
      hasOptionalZIndex: options.zIndex !== undefined,
      hasOptionalBreakpoints: options.breakpoints !== undefined
    });

    return configWithOptionals;
  }, [
    stickyId,
    options.direction,
    options.offset,
    options.priority,
    options.boundary,
    options.zIndex,
    options.enabled,
    options.smooth,
    options.breakpoints
  ]);

  /**
   * –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
   * –ü—Ä–∏–Ω—Ü–∏–ø Information Expert: —Ö—É–∫ –∑–Ω–∞–µ—Ç –∫–æ–≥–¥–∞ —ç–ª–µ–º–µ–Ω—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
   */
  useEffect(() => {
    if (!elementRef.current || context.isSSR) {
      // üîß –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–ø—É—Å–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
      debugLogger.debug(stickyId, '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–ø—É—â–µ–Ω–∞', {
        hasElement: !!elementRef.current,
        isSSR: context.isSSR,
        reason: !elementRef.current ? 'no element' : 'SSR mode'
      });
      return;
    }

    try {
      // üîß –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—á–∞–ª–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
      debugLogger.registration(stickyId, {
        config,
        elementInfo: {
          tagName: elementRef.current.tagName,
          className: elementRef.current.className,
          bounds: elementRef.current.getBoundingClientRect()
        },
        contextStats: {
          totalElements: context.elements.size,
          totalGroups: context.groups.size
        }
      });

      // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —ç–ª–µ–º–µ–Ω—Ç
      context.registerSticky(elementRef.current, config);

      // –î–æ–±–∞–≤–ª—è–µ–º –≤ –≥—Ä—É–ø–ø—É –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–∞
      if (options.groupId) {
        context.addToGroup(stickyId, options.groupId);

        // üîß –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É
        debugLogger.info(stickyId, `–≠–ª–µ–º–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É: ${options.groupId}`, {
          groupId: options.groupId
        });
      }

      setIsInitialized(true);

      // üîß –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
      debugLogger.info(stickyId, '–≠–ª–µ–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω', {
        hasGroup: !!options.groupId,
        initializationTime: Date.now()
      });

    } catch (error) {
      // üîß –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
      debugLogger.error(stickyId, '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–∞', {
        error: error instanceof Error ? error.message : 'Unknown error',
        config,
        elementInfo: elementRef.current ? {
          tagName: elementRef.current.tagName,
          className: elementRef.current.className
        } : null
      });

      // –ü–æ–≤—Ç–æ—Ä–Ω–æ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã—à–µ –ø–æ —Å—Ç–µ–∫—É
      throw error;
    }

    // Cleanup —Ñ—É–Ω–∫—Ü–∏—è
    return () => {
      try {
        // üîß –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—á–∞–ª–∞ –æ—á–∏—Å—Ç–∫–∏
        debugLogger.info(stickyId, '–ù–∞—á–∞–ª–æ –æ—á–∏—Å—Ç–∫–∏ —ç–ª–µ–º–µ–Ω—Ç–∞', {
          wasInitialized: isInitialized,
          hasGroup: !!options.groupId
        });

        context.unregisterSticky(stickyId);

        // üîß –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏
        debugLogger.unregistration(stickyId, 'component unmount');

      } catch (error) {
        // üîß –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏ –æ—á–∏—Å—Ç–∫–∏
        debugLogger.error(stickyId, '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —ç–ª–µ–º–µ–Ω—Ç–∞', {
          error: error instanceof Error ? error.message : 'Unknown error'
        });
      }
    };
  }, [context, config, stickyId, options.groupId]);

  /**
   * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –æ–ø—Ü–∏–π
   * –ü—Ä–∏–Ω—Ü–∏–ø DRY: –∏–∑–±–µ–≥–∞–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –ª–æ–≥–∏–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
   */
  useEffect(() => {
    if (!context.elements.has(stickyId)) {
      // üîß –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ø—ã—Ç–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
      debugLogger.warning(stickyId, '–ü–æ–ø—ã—Ç–∫–∞ –æ–±–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞', {
        availableElements: Array.from(context.elements.keys()),
        isInitialized
      });
      return;
    }

    try {
      // üîß –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
      debugLogger.configUpdate(stickyId, {
        newConfig: config,
        timestamp: Date.now()
      });

      context.updateConfig(stickyId, config);

    } catch (error) {
      // üîß –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
      debugLogger.error(stickyId, '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏', {
        error: error instanceof Error ? error.message : 'Unknown error',
        config
      });
    }
  }, [context, stickyId, config, isInitialized]);

  /**
   * –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ (—Ä–µ–∞–∫—Ç–∏–≤–Ω–æ —á–µ—Ä–µ–∑ MobX)
   * –ü—Ä–∏–Ω—Ü–∏–ø Observer Pattern: —Ä–µ–∞–≥–∏—Ä—É–µ–º –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
   */
  const element = context.elements.get(stickyId);
  const state = element?.state || 'normal';
  const isSticky = state === 'sticky';
  const isActive = element?.isActive || false;

  /**
   * Callback –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–º–µ–Ω–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
   * –ü—Ä–∏–Ω—Ü–∏–ø Low Coupling: —Å–ª–∞–±–∞—è —Å–≤—è–∑—å —Å –≤–Ω–µ—à–Ω–∏–º–∏ callback'–∞–º–∏
   */
  useEffect(() => {
    if (!options.onStateChange || !state) return;

    try {
      // üîß –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–∑–æ–≤–∞ callback
      debugLogger.debug(stickyId, '–í—ã–∑–æ–≤ onStateChange callback', {
        oldState: element?.previousState || null,
        newState: state,
        isSticky,
        isActive,
        callbackType: typeof options.onStateChange
      });

      options.onStateChange(state);

      // üîß –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ–≥–æ callback
      debugLogger.debug(stickyId, 'onStateChange callback –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ');

    } catch (error) {
      // üîß –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏ –≤ callback
      debugLogger.error(stickyId, '–û—à–∏–±–∫–∞ –≤ onStateChange callback', {
        error: error instanceof Error ? error.message : 'Unknown error',
        state,
        callbackSource: 'user provided'
      });

      // –ù–µ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–∞–ª—å—à–µ, —á—Ç–æ–±—ã –Ω–µ —Å–ª–æ–º–∞—Ç—å —Ä–∞–±–æ—Ç—É —Ö—É–∫–∞
    }
  }, [state, isSticky, isActive, options.onStateChange, stickyId, element]);

  /**
   * –ú–µ—Ç–æ–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–º
   * –ü—Ä–∏–Ω—Ü–∏–ø Command Pattern: –∏–Ω–∫–∞–ø—Å—É–ª–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã –≤ —Ñ—É–Ω–∫—Ü–∏–∏
   */
  const updateConfig = useCallback((newConfig: Partial<StickyConfig>) => {
    try {
      // üîß –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
      debugLogger.configUpdate(stickyId, {
        currentConfig: config,
        updates: newConfig,
        source: 'updateConfig method'
      });

      context.updateConfig(stickyId, newConfig);

    } catch (error) {
      // üîß –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
      debugLogger.error(stickyId, '–û—à–∏–±–∫–∞ –≤ updateConfig', {
        error: error instanceof Error ? error.message : 'Unknown error',
        newConfig
      });

      throw error; // –í—ã–±—Ä–∞—Å—ã–≤–∞–µ–º –¥–∞–ª—å—à–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ UI
    }
  }, [context, stickyId, config]);

  const refresh = useCallback(() => {
    try {
      // üîß –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
      debugLogger.info(stickyId, '–ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ refresh()', {
        contextStats: {
          totalElements: context.elements.size,
          activeElements: context.getActiveElements().length
        }
      });

      context.refreshAll();

    } catch (error) {
      // üîß –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
      debugLogger.error(stickyId, '–û—à–∏–±–∫–∞ –≤ refresh()', {
        error: error instanceof Error ? error.message : 'Unknown error'
      });

      throw error;
    }
  }, [context, stickyId]);

  const disable = useCallback(() => {
    try {
      // üîß –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è
      debugLogger.info(stickyId, '–≠–ª–µ–º–µ–Ω—Ç –æ—Ç–∫–ª—é—á–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ disable()', {
        wasActive: isActive,
        currentState: state
      });

      updateConfig({ disabled: true });

    } catch (error) {
      // üîß –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è
      debugLogger.error(stickyId, '–û—à–∏–±–∫–∞ –≤ disable()', {
        error: error instanceof Error ? error.message : 'Unknown error'
      });

      throw error;
    }
  }, [updateConfig, stickyId, isActive, state]);

  const enable = useCallback(() => {
    try {
      // üîß –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–∏—è
      debugLogger.info(stickyId, '–≠–ª–µ–º–µ–Ω—Ç –≤–∫–ª—é—á–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ enable()', {
        wasDisabled: config.disabled,
        currentState: state
      });

      updateConfig({ disabled: false });

    } catch (error) {
      // üîß –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏ –≤–∫–ª—é—á–µ–Ω–∏—è
      debugLogger.error(stickyId, '–û—à–∏–±–∫–∞ –≤ enable()', {
        error: error instanceof Error ? error.message : 'Unknown error'
      });

      throw error;
    }
  }, [updateConfig, stickyId, config.disabled, state]);

  // üîß –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∞ (—Ç–æ–ª—å–∫–æ –≤ debug —Ä–µ–∂–∏–º–µ)
  useEffect(() => {
    debugLogger.debug(stickyId, 'Hook —Ä–µ–Ω–¥–µ—Ä', {
      state,
      isSticky,
      isActive,
      isInitialized,
      configHash: JSON.stringify(config).length // –ü—Ä–æ—Å—Ç–æ–π —Ö–µ—à –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
    });
  });

  return {
    ref: elementRef,
    state,
    isSticky,
    isActive,
    updateConfig,
    refresh,
    disable,
    enable
  };
};
